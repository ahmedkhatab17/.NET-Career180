{
  "openapi": "3.0.1",
  "info": {
    "title": "BookStoreAPI",
    "version": "1.0"
  },
  "paths": {
    "/api/Account/Login": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Log in a user",
        "description": "Authenticates a user and returns a JWT token if login is successful.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful. Returns a JWT token.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password."
          }
        }
      }
    },
    "/api/Account/Logout": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Log out a user",
        "description": "Logs out the currently authenticated user.",
        "responses": {
          "200": {
            "description": "Logout successful."
          }
        }
      }
    },
    "/api/Admin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create a new admin",
        "description": "Creates a new admin user and assigns them the 'admin' role.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAdminDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAdminDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddAdminDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddAdminDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAdminDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAdminDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid admin data or role assignment failed"
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Check admin authentication",
        "description": "Checks if the current user is authenticated as an admin.",
        "responses": {
          "200": {
            "description": "User is authenticated as admin"
          },
          "401": {
            "description": "User is not authenticated"
          }
        }
      }
    },
    "/api/Book": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Get all books",
        "description": "Retrieves a list of all books.",
        "responses": {
          "200": {
            "description": "Returns the list of books.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisplayBookDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisplayBookDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisplayBookDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "Add a new book",
        "description": "Adds a new book to the database.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The book was successfully created."
          },
          "400": {
            "description": "Invalid book data."
          }
        }
      }
    },
    "/api/Book/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Get a book by ID",
        "description": "Retrieves details of a book using its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the book details.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayBookDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayBookDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayBookDTO"
                }
              }
            }
          },
          "404": {
            "description": "No book found with the given ID."
          }
        }
      },
      "put": {
        "tags": [
          "Book"
        ],
        "summary": "Edit book details",
        "description": "Updates the details of an existing book.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The book was successfully updated."
          },
          "400": {
            "description": "Invalid book data."
          }
        }
      },
      "delete": {
        "tags": [
          "Book"
        ],
        "summary": "Delete a book",
        "description": "Removes a book from the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The book was successfully deleted."
          },
          "404": {
            "description": "No book found with the given ID."
          }
        }
      }
    },
    "/api/ChangePassword/ChangePassword": {
      "post": {
        "tags": [
          "ChangePassword"
        ],
        "summary": "Change a user's password",
        "description": "Allows a user to change their password by providing their ID, old password, and new password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password was successfully changed."
          },
          "400": {
            "description": "Invalid input or errors encountered while changing the password."
          }
        }
      }
    },
    "/api/Customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new customer",
        "description": "Adds a new customer to the system and assigns the 'customer' role.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCustomerDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCustomerDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddCustomerDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddCustomerDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCustomerDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddCustomerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid customer data or role assignment failed"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Edit customer profile",
        "description": "Updates the profile of an existing customer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCustomerDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCustomerDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditCustomerDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Customer profile updated successfully"
          },
          "400": {
            "description": "Invalid customer data"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    },
    "/api/Customer/All": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get all customers",
        "description": "Retrieves a list of all customers.",
        "responses": {
          "200": {
            "description": "Customers retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectCustomerDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectCustomerDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelectCustomerDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No customers found"
          }
        }
      }
    },
    "/api/Customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get a customer by ID",
        "description": "Retrieves a specific customer by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SelectCustomerDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectCustomerDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SelectCustomerDTO"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    },
    "/api/Order": {
      "post": {
        "tags": [
          "Order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrderDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrderDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrderDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrderDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrderDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditOrderDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddAdminDTO": {
        "required": [
          "password",
          "phoneNumber",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AddBookDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "maximum": 1000,
            "minimum": 20,
            "type": "number",
            "format": "double"
          },
          "stock": {
            "maximum": 500,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "publishedDate": {
            "type": "string",
            "format": "date"
          },
          "authorId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "catalogId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddCustomerDTO": {
        "required": [
          "password",
          "phoneNumber",
          "username"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AddOrderDTO": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "books": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordDTO": {
        "required": [
          "confirmPassword",
          "id",
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "oldPassword": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "minLength": 1,
            "type": "string"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DisplayBookDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          },
          "publishdate": {
            "type": "string",
            "format": "date"
          },
          "authorname": {
            "type": "string",
            "nullable": true
          },
          "catalog": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditCustomerDTO": {
        "required": [
          "email",
          "id",
          "phoneNumber",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditOrderDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "books": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderItemDTO": {
        "type": "object",
        "properties": {
          "bookId": {
            "type": "integer",
            "format": "int32"
          },
          "quntity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SelectCustomerDTO": {
        "required": [
          "email",
          "id",
          "phoneNumber",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}