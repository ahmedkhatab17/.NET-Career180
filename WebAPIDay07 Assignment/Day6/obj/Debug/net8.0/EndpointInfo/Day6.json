{
  "openapi": "3.0.1",
  "info": {
    "title": "My API - V1",
    "description": "A sample API to demo Swashbuckle",
    "termsOfService": "http://tempuri.org/terms",
    "contact": {
      "name": "MElShafie",
      "email": " MElShafie @tempuri.org"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Department": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Return All Department",
        "responses": {
          "200": {
            "description": "All Deparment Data",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisplayDepartmentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisplayDepartmentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisplayDepartmentDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Add a new department",
        "description": "Create a new department record",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDepartmentDTo"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDepartmentDTo"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddDepartmentDTo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department successfully created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/empDept": {
      "get": {
        "tags": [
          "empDept"
        ],
        "summary": "Get all employees and departments",
        "description": "Fetch both employee and department records",
        "responses": {
          "200": {
            "description": "List of employees and departments"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "empDept"
        ],
        "summary": "Add an employee with a department",
        "description": "Create a new employee and assign to a department",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee and department successfully created"
          },
          "400": {
            "description": "Invalid input provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/employees": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Retrieve all employees",
        "description": "Fetch all employee records",
        "responses": {
          "200": {
            "description": "List of all employees",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisplayemployeeDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisplayemployeeDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisplayemployeeDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "employees"
        ],
        "summary": "Add a new employee",
        "description": "Create a new employee record",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addemployeeDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/addemployeeDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/addemployeeDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee successfully created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/employees/{id}": {
      "get": {
        "tags": [
          "employees"
        ],
        "summary": "Get employee by ID",
        "description": "Retrieve a specific employee by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayemployeeDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayemployeeDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayemployeeDTO"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddDepartmentDTo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "desc": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Department": {
        "required": [
          "desc",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "desc": {
            "minLength": 1,
            "type": "string"
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employee"
            },
            "nullable": true
          },
          "projectdepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Projectdept"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisplayDepartmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "employeecount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DisplayemployeeDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "hiredate": {
            "type": "string",
            "format": "date"
          },
          "salary": {
            "type": "number",
            "format": "double"
          },
          "departmentName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Employee": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "hiredate": {
            "type": "string",
            "format": "date"
          },
          "salary": {
            "type": "number",
            "format": "double"
          },
          "deptid": {
            "type": "integer",
            "format": "int32"
          },
          "dept": {
            "$ref": "#/components/schemas/Department"
          }
        },
        "additionalProperties": false
      },
      "Project": {
        "required": [
          "desc",
          "location",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "location": {
            "minLength": 1,
            "type": "string"
          },
          "desc": {
            "minLength": 1,
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "projectdepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Projectdept"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Projectdept": {
        "type": "object",
        "properties": {
          "deptid": {
            "type": "integer",
            "format": "int32"
          },
          "projid": {
            "type": "integer",
            "format": "int32"
          },
          "workinghours": {
            "type": "integer",
            "format": "int32"
          },
          "dept": {
            "$ref": "#/components/schemas/Department"
          },
          "proj": {
            "$ref": "#/components/schemas/Project"
          }
        },
        "additionalProperties": false
      },
      "addemployeeDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "hiredate": {
            "type": "string",
            "format": "date"
          },
          "salary": {
            "type": "number",
            "format": "double"
          },
          "deptid": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    }
  }
}